{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Bootcamp/portfolio/random_quote/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport QuoteInput from './component/QuoteInput';\nimport QuoteDisplay from './component/QuoteDisplay';\nimport ActionButtons from './component/ActionButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const backendURL = \"https://afternoon-depths-72364-ad550251f5f5.herokuapp.com/\";\n\n  //  When testing the local backend \n  // const backendURL = \"http://localhost:4000\";\n\n  const [quote, setQuote] = useState(\"\");\n  const [displayQuote, setDisplayQuote] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchRandomQuote = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`${backendURL}/random`);\n        const data = await response.json();\n        setDisplayQuote(data.quote);\n      } catch (error) {\n        console.error(\"Error fetching random quote:\", error);\n      }\n      setIsLoading(false);\n    };\n    fetchRandomQuote();\n  }, [backendURL]); // <-- Added dependency here\n\n  const handleSave = async () => {\n    try {\n      await fetch(`${backendURL}/add`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          quote\n        })\n      });\n      setQuote(\"\");\n    } catch (error) {\n      console.error(\"Error saving the quote:\", error);\n    }\n  };\n  const handleGenerate = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${backendURL}/random`);\n      const data = await response.json();\n      setDisplayQuote(data.quote);\n    } catch (error) {\n      console.error(\"Error fetching random quote:\", error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuoteInput, {\n      quote: quote,\n      setQuote: setQuote,\n      handleSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n      handleSave: handleSave,\n      handleGenerate: handleGenerate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuoteDisplay, {\n      displayQuote: displayQuote,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"PH63+5vWw/IGlQy58OMer+4hl+I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","QuoteInput","QuoteDisplay","ActionButtons","jsxDEV","_jsxDEV","App","_s","backendURL","quote","setQuote","displayQuote","setDisplayQuote","isLoading","setIsLoading","fetchRandomQuote","response","fetch","data","json","error","console","handleSave","method","headers","body","JSON","stringify","handleGenerate","component","sx","height","display","flexDirection","justifyContent","alignItems","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Daniel/Bootcamp/portfolio/random_quote/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport QuoteInput from './component/QuoteInput';\nimport QuoteDisplay from './component/QuoteDisplay';\nimport ActionButtons from './component/ActionButtons';\n\nfunction App() {\n    const backendURL = \"https://afternoon-depths-72364-ad550251f5f5.herokuapp.com/\"\n\n    //  When testing the local backend \n    // const backendURL = \"http://localhost:4000\";\n    \n    const [quote, setQuote] = useState<string>(\"\");\n    const [displayQuote, setDisplayQuote] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        const fetchRandomQuote = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`${backendURL}/random`);\n                const data = await response.json();\n                setDisplayQuote(data.quote);\n            } catch (error) {\n                console.error(\"Error fetching random quote:\", error);\n            }\n            setIsLoading(false);\n        };\n        fetchRandomQuote();\n    }, [backendURL]); // <-- Added dependency here\n\n    const handleSave = async (): Promise<void> => {\n        try {\n            await fetch(`${backendURL}/add`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ quote })\n            });\n            setQuote(\"\");\n        } catch (error) {\n            console.error(\"Error saving the quote:\", error);\n        }\n    }\n    \n    const handleGenerate = async (): Promise<void> => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`${backendURL}/random`);\n            const data = await response.json();\n            setDisplayQuote(data.quote);\n        } catch (error) {\n            console.error(\"Error fetching random quote:\", error);\n        }\n        setIsLoading(false);\n    }\n\n    return (\n        <Container component=\"main\" sx={{\n            height: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }}>\n            <Typography variant=\"h4\" gutterBottom align=\"center\">\n                Quote Generator \n            </Typography>\n\n            <QuoteInput \n                quote={quote}\n                setQuote={setQuote}\n                handleSave={handleSave}\n            />\n\n            <ActionButtons \n                handleSave={handleSave}\n                handleGenerate={handleGenerate}\n            />\n\n            <QuoteDisplay displayQuote={displayQuote} isLoading={isLoading} />\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}